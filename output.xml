<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.10.12 on win32)" generated="20241223 16:16:02.756" rpa="false" schemaversion="4">
<suite id="s1" name="Robots" source="c:\QA\fx-gui-11\robots">
<kw name="Suite setup" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>browser=chromium</arg>
<arg>headless=false</arg>
<arg>slowMo=1ms</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241223 16:16:03.085" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 1.0, "timeout": 30000.0, "tracesDir": "C:\\QA\\fx-gui-11\\browser\\traces\\3bae94e5-7dea-4df5-a456-cd89be46560f"}</msg>
<msg timestamp="20241223 16:16:03.136" level="INFO">Starting Browser process c:\python310\lib\site-packages\Browser\wrapper\index.js using port 54107</msg>
<msg timestamp="20241223 16:16:03.136" level="INFO">Node startup parameters: ['node', 'c:\\python310\\lib\\site-packages\\Browser\\wrapper\\index.js', '54107']</msg>
<msg timestamp="20241223 16:16:04.673" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":1,"timeout":30000,"tracesDir":"C:\\QA\\fx-gui-11\\browser\\traces\\3bae94e5-7dea-4df5-a456-cd89be46560f"}</msg>
<status status="PASS" starttime="20241223 16:16:03.084" endtime="20241223 16:16:04.674"/>
</kw>
<kw name="New Context" library="Browser">
<arg>viewport={'width': 1920, 'height': 1000}</arg>
<arg>screen={'width': 1600, 'height': 900}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241223 16:16:04.679" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "screen": {
    "width": 1600,
    "height": 900
  },
  "serviceWorkers": "allow",
  "viewport": {
    "height": 1000,
    "width": 1920
  }
}</msg>
<msg timestamp="20241223 16:16:04.711" level="INFO">Successfully created context. </msg>
<msg timestamp="20241223 16:16:04.712" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'screen': {'width': 1600, 'height': 900}, 'serviceWorkers': 'allow', 'viewport': {'height': 1000, 'width': 1920}}</msg>
<status status="PASS" starttime="20241223 16:16:04.675" endtime="20241223 16:16:04.712"/>
</kw>
<kw name="Populate environment">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESOURCES}</arg>
<arg>c:\\QA\\fx-gui-11\\robots\\..\\resources</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241223 16:16:04.717" level="INFO">${RESOURCES} = c:\QA\fx-gui-11\robots\..\resources</msg>
<status status="PASS" starttime="20241223 16:16:04.714" endtime="20241223 16:16:04.717"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Setting global variables from ${target_config}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:04.718" endtime="20241223 16:16:04.719"/>
</kw>
<kw name="Get Variables From File" library="get_variables">
<var>${items}</var>
<arg>c:\\QA\\fx-gui-11\\targetconfig.json</arg>
<doc>Get variables from the file and return them in dictionary.
Parses string patterns like "TARGET_FRONTEND_IP": "10.78.185.23"</doc>
<msg timestamp="20241223 16:16:04.722" level="INFO">${items} = {'TARGET_USER': 'system', 'TARGET_USER_PASSWORD': '24680', 'TARGET_FRONTEND_IP': '10.100.1.199', 'TARGET_FRONTEND_PORT': '80'}</msg>
<status status="PASS" starttime="20241223 16:16:04.720" endtime="20241223 16:16:04.722"/>
</kw>
<for flavor="IN">
<var>${key}</var>
<var>${value}</var>
<value>&amp;{items}</value>
<iter>
<var name="${key}">TARGET_USER</var>
<var name="${value}">system</var>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${${key}}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241223 16:16:04.727" level="INFO">${TARGET_USER} = system</msg>
<status status="PASS" starttime="20241223 16:16:04.724" endtime="20241223 16:16:04.727"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key} = ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:04.728" endtime="20241223 16:16:04.729"/>
</kw>
<status status="PASS" starttime="20241223 16:16:04.723" endtime="20241223 16:16:04.729"/>
</iter>
<iter>
<var name="${key}">TARGET_USER_PASSWORD</var>
<var name="${value}">24680</var>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${${key}}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241223 16:16:04.732" level="INFO">${TARGET_USER_PASSWORD} = 24680</msg>
<status status="PASS" starttime="20241223 16:16:04.730" endtime="20241223 16:16:04.732"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key} = ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:04.733" endtime="20241223 16:16:04.734"/>
</kw>
<status status="PASS" starttime="20241223 16:16:04.730" endtime="20241223 16:16:04.734"/>
</iter>
<iter>
<var name="${key}">TARGET_FRONTEND_IP</var>
<var name="${value}">10.100.1.199</var>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${${key}}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241223 16:16:04.737" level="INFO">${TARGET_FRONTEND_IP} = 10.100.1.199</msg>
<status status="PASS" starttime="20241223 16:16:04.735" endtime="20241223 16:16:04.738"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key} = ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:04.738" endtime="20241223 16:16:04.739"/>
</kw>
<status status="PASS" starttime="20241223 16:16:04.735" endtime="20241223 16:16:04.739"/>
</iter>
<iter>
<var name="${key}">TARGET_FRONTEND_PORT</var>
<var name="${value}">80</var>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${${key}}</arg>
<arg>${value}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241223 16:16:04.742" level="INFO">${TARGET_FRONTEND_PORT} = 80</msg>
<status status="PASS" starttime="20241223 16:16:04.740" endtime="20241223 16:16:04.743"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key} = ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:04.743" endtime="20241223 16:16:04.745"/>
</kw>
<status status="PASS" starttime="20241223 16:16:04.740" endtime="20241223 16:16:04.745"/>
</iter>
<status status="PASS" starttime="20241223 16:16:04.722" endtime="20241223 16:16:04.746"/>
</for>
<status status="PASS" starttime="20241223 16:16:04.713" endtime="20241223 16:16:04.746"/>
</kw>
<status status="PASS" starttime="20241223 16:16:03.083" endtime="20241223 16:16:04.747"/>
</kw>
<suite id="s1-s1" name="Sftp Stress Tests" source="c:\QA\fx-gui-11\robots\sftp_stress_tests.robot">
<test id="s1-s1-t1" name="Test SFTP Communication" line="36">
<kw name="Test SFTP Upload All Folder Files To Remote">
<arg>${host}</arg>
<arg>${host}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>5</arg>
<arg>c:\\QA\\robot_tmp\\1MB</arg>
<arg>/tmp</arg>
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=${alias}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20241223 16:16:07.225" endtime="20241223 16:16:07.226"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${username}</arg>
<arg>${password}</arg>
<arg>delay=${delay}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20241223 16:16:07.227" level="INFO">Logging into '10.78.185.37:22' as 'fx3000'.</msg>
<msg timestamp="20241223 16:16:13.204" level="INFO">Read output: Last login: Mon Dec 23 16:12:50 2024 from 10.80.192.99
FX-3000-X Controller
Powered by Anvil Platform
Fidelix Tech Oy
fx3000@fx3000-10880847:~$</msg>
<status status="PASS" starttime="20241223 16:16:07.226" endtime="20241223 16:16:13.205"/>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<var>${connection_info}</var>
<doc>Returns information about the connection.</doc>
<msg timestamp="20241223 16:16:13.206" level="INFO">index=1
host=10.78.185.37
alias=10.78.185.37
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<msg timestamp="20241223 16:16:13.206" level="INFO">${connection_info} = index=1
host=10.78.185.37
alias=10.78.185.37
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<status status="PASS" starttime="20241223 16:16:13.205" endtime="20241223 16:16:13.207"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Connection info: ${connection_info}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:13.207" endtime="20241223 16:16:13.209"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:16:13.314" level="INFO">[chan 1] Opened sftp connection (server version 3)</msg>
<msg timestamp="20241223 16:16:13.520" level="INFO">6 items:
.err
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:16:13.520" level="INFO">@{items} = [ .err | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | systemd-priv...</msg>
<status status="PASS" starttime="20241223 16:16:13.210" endtime="20241223 16:16:13.521"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${local_folder_path_exists}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>${local_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${local_folder_path}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20241223 16:16:13.523" level="INFO" html="true">Directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20241223 16:16:13.522" endtime="20241223 16:16:13.523"/>
</kw>
<msg timestamp="20241223 16:16:13.523" level="INFO">${local_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:16:13.521" endtime="20241223 16:16:13.523"/>
</kw>
<if>
<branch type="IF" condition="${local_folder_path_exists}">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:16:13.525" endtime="20241223 16:16:13.557"/>
</kw>
<msg timestamp="20241223 16:16:13.558" level="INFO">${remote_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:16:13.524" endtime="20241223 16:16:13.558"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_exists}">
<kw name="List Directory" library="OperatingSystem">
<var>@{local_folder_items}</var>
<arg>${local_folder_path}</arg>
<doc>Returns and logs items in a directory, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:16:13.560" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:16:13.560" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:16:13.561" level="INFO">@{local_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:16:13.559" endtime="20241223 16:16:13.561"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${local_list_length}</var>
<arg>${local_folder_items}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:16:13.562" level="INFO">Length is 1</msg>
<msg timestamp="20241223 16:16:13.562" level="INFO">${local_list_length} = 1</msg>
<status status="PASS" starttime="20241223 16:16:13.561" endtime="20241223 16:16:13.562"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${parent_path}</var>
<var>${copied_subfolder}</var>
<arg>${local_folder_path}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20241223 16:16:13.563" level="INFO">${parent_path} = c:\QA\robot_tmp</msg>
<msg timestamp="20241223 16:16:13.564" level="INFO">${copied_subfolder} = 1MB</msg>
<status status="PASS" starttime="20241223 16:16:13.563" endtime="20241223 16:16:13.564"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_folder_path_after_copy}</var>
<arg>${remote_folder_path}/${copied_subfolder}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:16:13.565" level="INFO">${remote_folder_path_after_copy} = /tmp/1MB</msg>
<status status="PASS" starttime="20241223 16:16:13.564" endtime="20241223 16:16:13.565"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${start_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:16:13.566" level="INFO">${start_time} = 2024-12-23 16:16:13.565902</msg>
<status status="PASS" starttime="20241223 16:16:13.565" endtime="20241223 16:16:13.566"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${local_folder_path}</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20241223 16:16:13.567" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:16:13.568" level="INFO">1 file:
1MB.txt</msg>
<msg timestamp="20241223 16:16:13.568" level="INFO">@{files} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:16:13.567" endtime="20241223 16:16:13.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${transferred _size}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:16:13.569" level="INFO">${transferred _size} = 0</msg>
<status status="PASS" starttime="20241223 16:16:13.569" endtime="20241223 16:16:13.569"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${file}">1MB.txt</var>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_file_path}</var>
<arg>${remote_folder_path_after_copy}/${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:16:13.571" level="INFO">${remote_file_path} = /tmp/1MB/1MB.txt</msg>
<status status="PASS" starttime="20241223 16:16:13.571" endtime="20241223 16:16:13.572"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${local_file_path}</var>
<arg>${local_folder_path}\\${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:16:13.573" level="INFO">${local_file_path} = c:\QA\robot_tmp\1MB\1MB.txt</msg>
<status status="PASS" starttime="20241223 16:16:13.572" endtime="20241223 16:16:13.573"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Local file: ${local_file_path}</arg>
<arg>-- ${file} is uploading to remote destination: ${remote_file_path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:13.573" endtime="20241223 16:16:13.574"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${size}</var>
<arg>os.path.getsize(r"""${local_file_path}""")</arg>
<arg>modules=os</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:16:13.576" level="INFO">${size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:16:13.575" endtime="20241223 16:16:13.576"/>
</kw>
<kw name="Put File" library="SSHLibrary">
<arg>${local_file_path}</arg>
<arg>${remote_file_path}</arg>
<doc>Uploads file(s) from the local machine to the remote machine.</doc>
<msg timestamp="20241223 16:16:15.416" level="INFO">'c:\QA\robot_tmp\1MB\1MB.txt' -&gt; '/tmp/1MB/1MB.txt'</msg>
<status status="PASS" starttime="20241223 16:16:13.576" endtime="20241223 16:16:15.416"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${transferred_size}</var>
<arg>${transferred_size}+${size}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:16:15.417" level="INFO">${transferred_size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:16:15.417" endtime="20241223 16:16:15.418"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>size ${size} \(total: ${transferred size}\) file: ${file} is uploaded.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:15.418" endtime="20241223 16:16:15.419"/>
</kw>
<status status="PASS" starttime="20241223 16:16:13.570" endtime="20241223 16:16:15.420"/>
</iter>
<status status="PASS" starttime="20241223 16:16:13.570" endtime="20241223 16:16:15.420"/>
</for>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_complete_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:16:15.421" endtime="20241223 16:16:15.455"/>
</kw>
<msg timestamp="20241223 16:16:15.456" level="INFO">${remote_folder_complete_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:16:15.420" endtime="20241223 16:16:15.456"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_complete_path_exists}">
<kw name="List Directory" library="SSHLibrary">
<var>@{remote_folder_items}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:16:15.635" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:16:15.636" level="INFO">@{remote_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:16:15.457" endtime="20241223 16:16:15.636"/>
</kw>
<status status="PASS" starttime="20241223 16:16:15.457" endtime="20241223 16:16:15.636"/>
</branch>
<status status="PASS" starttime="20241223 16:16:15.456" endtime="20241223 16:16:15.636"/>
</if>
<kw name="Get Current Date" library="DateTime">
<var>${stop_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:16:15.638" level="INFO">${stop_time} = 2024-12-23 16:16:15.637156</msg>
<status status="PASS" starttime="20241223 16:16:15.637" endtime="20241223 16:16:15.638"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${duration}</var>
<arg>(datetime.datetime.strptime('${stop_time}', '${timestamp_format}') - datetime.datetime.strptime('${start_time}', '${timestamp_format}')).total_seconds()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:16:15.643" level="INFO">${duration} = 2.071254</msg>
<status status="PASS" starttime="20241223 16:16:15.638" endtime="20241223 16:16:15.643"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${remote_list_length}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:16:15.644" level="INFO">Length is 8</msg>
<msg timestamp="20241223 16:16:15.645" level="INFO">${remote_list_length} = 8</msg>
<status status="PASS" starttime="20241223 16:16:15.644" endtime="20241223 16:16:15.645"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:16:15.797" level="INFO">7 items:
.err
1MB
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:16:15.798" level="INFO">@{items} = [ .err | 1MB | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | system...</msg>
<status status="PASS" starttime="20241223 16:16:15.645" endtime="20241223 16:16:15.798"/>
</kw>
<kw name="Remote Folder Remove">
<arg>${remote_folder_path_after_copy}</arg>
<kw name="Execute Command" library="SSHLibrary">
<var>${output}</var>
<arg>rm -rf ${remote_folder_path}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20241223 16:16:15.800" level="INFO">Executing command 'rm -rf /tmp/1MB'.</msg>
<msg timestamp="20241223 16:16:15.907" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20241223 16:16:15.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241223 16:16:15.800" endtime="20241223 16:16:15.908"/>
</kw>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:16:15.908" endtime="20241223 16:16:16.016"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Remote directory ${remote_folder_path} removed\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:16.016" endtime="20241223 16:16:16.018"/>
</kw>
<status status="PASS" starttime="20241223 16:16:15.799" endtime="20241223 16:16:16.018"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_not_exists}</var>
<arg>SSHLibrary.Directory Should Not Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:16:16.019" endtime="20241223 16:16:16.050"/>
</kw>
<msg timestamp="20241223 16:16:16.051" level="INFO">${remote_folder_path_not_exists} = True</msg>
<status status="PASS" starttime="20241223 16:16:16.019" endtime="20241223 16:16:16.051"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_not_exists}">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder deleted OK : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:16.052" endtime="20241223 16:16:16.053"/>
</kw>
<status status="PASS" starttime="20241223 16:16:16.052" endtime="20241223 16:16:16.053"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder NOT deleted : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:16:16.054" endtime="20241223 16:16:16.055"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:16:16.054" endtime="20241223 16:16:16.055"/>
</branch>
<status status="PASS" starttime="20241223 16:16:16.051" endtime="20241223 16:16:16.055"/>
</if>
<status status="PASS" starttime="20241223 16:16:13.559" endtime="20241223 16:16:16.055"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:16:16.056" endtime="20241223 16:16:16.056"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:16:16.057" endtime="20241223 16:16:16.057"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:16:16.056" endtime="20241223 16:16:16.057"/>
</branch>
<status status="PASS" starttime="20241223 16:16:13.558" endtime="20241223 16:16:16.057"/>
</if>
<status status="PASS" starttime="20241223 16:16:13.524" endtime="20241223 16:16:16.058"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:16:16.059" endtime="20241223 16:16:16.059"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:16:16.059" endtime="20241223 16:16:16.060"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:16:16.058" endtime="20241223 16:16:16.060"/>
</branch>
<status status="PASS" starttime="20241223 16:16:13.524" endtime="20241223 16:16:16.060"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${average_speed}</var>
<arg>round((${transferred_size} / 1024) / ${duration}, 2)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:16:16.061" level="INFO">${average_speed} = 494.36</msg>
<status status="PASS" starttime="20241223 16:16:16.060" endtime="20241223 16:16:16.061"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Number of copied items: ${local_list_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:16.062" endtime="20241223 16:16:16.063"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Total size: ${transferred_size} bytes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:16.063" endtime="20241223 16:16:16.064"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Time to copy: ${duration}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:16.064" endtime="20241223 16:16:16.065"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Average Speed: ${average_speed} KB/</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:16.066" endtime="20241223 16:16:16.066"/>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20241223 16:16:16.067" endtime="20241223 16:16:16.068"/>
</kw>
<status status="PASS" starttime="20241223 16:16:07.224" endtime="20241223 16:16:16.068"/>
</kw>
<kw name="Upload With Lag By Clumsy">
<arg>host=10.78.185.37</arg>
<arg>username=fx3000</arg>
<arg>password=Systemuser!</arg>
<arg>upload_folder=c:\\QA\\robot_tmp\\1MB</arg>
<arg>lag_time=100</arg>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>${CLUMSY_PATH}clumsy.exe</arg>
<arg>--lag</arg>
<arg>on</arg>
<arg>--lag-inbound</arg>
<arg>on</arg>
<arg>--lag-outbound</arg>
<arg>on</arg>
<arg>--lag-time</arg>
<arg>${lag_time}</arg>
<arg>alias=clumsy_03</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20241223 16:16:16.072" level="INFO">Starting process:
C:/QA/temp/clumsy_03/clumsy.exe --lag on --lag-inbound on --lag-outbound on --lag-time 100</msg>
<msg timestamp="20241223 16:16:16.088" level="INFO">${process} = &lt;Popen: returncode: None args: ['C:/QA/temp/clumsy_03/clumsy.exe', '--lag', ...&gt;</msg>
<status status="PASS" starttime="20241223 16:16:16.070" endtime="20241223 16:16:16.088"/>
</kw>
<kw name="Test SFTP Upload All Folder Files To Remote">
<arg>${host}</arg>
<arg>${alias}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>5</arg>
<arg>${upload_folder}</arg>
<arg>/tmp</arg>
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=${alias}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20241223 16:16:16.091" endtime="20241223 16:16:16.092"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${username}</arg>
<arg>${password}</arg>
<arg>delay=${delay}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20241223 16:16:16.094" level="INFO">Logging into '10.78.185.37:22' as 'fx3000'.</msg>
<msg timestamp="20241223 16:16:23.196" level="INFO">Read output: Last login: Mon Dec 23 16:16:09 2024 from 10.80.192.99
FX-3000-X Controller
Powered by Anvil Platform
Fidelix Tech Oy
fx3000@fx3000-10880847:~$</msg>
<status status="PASS" starttime="20241223 16:16:16.093" endtime="20241223 16:16:23.197"/>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<var>${connection_info}</var>
<doc>Returns information about the connection.</doc>
<msg timestamp="20241223 16:16:23.198" level="INFO">index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<msg timestamp="20241223 16:16:23.199" level="INFO">${connection_info} = index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<status status="PASS" starttime="20241223 16:16:23.198" endtime="20241223 16:16:23.199"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Connection info: ${connection_info}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:23.199" endtime="20241223 16:16:23.202"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:16:24.038" level="INFO">[chan 1] Opened sftp connection (server version 3)</msg>
<msg timestamp="20241223 16:16:25.739" level="INFO">6 items:
.err
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:16:25.740" level="INFO">@{items} = [ .err | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | systemd-priv...</msg>
<status status="PASS" starttime="20241223 16:16:23.203" endtime="20241223 16:16:25.740"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${local_folder_path_exists}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>${local_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${local_folder_path}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20241223 16:16:25.743" level="INFO" html="true">Directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20241223 16:16:25.742" endtime="20241223 16:16:25.743"/>
</kw>
<msg timestamp="20241223 16:16:25.743" level="INFO">${local_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:16:25.741" endtime="20241223 16:16:25.743"/>
</kw>
<if>
<branch type="IF" condition="${local_folder_path_exists}">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:16:25.745" endtime="20241223 16:16:26.022"/>
</kw>
<msg timestamp="20241223 16:16:26.023" level="INFO">${remote_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:16:25.745" endtime="20241223 16:16:26.023"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_exists}">
<kw name="List Directory" library="OperatingSystem">
<var>@{local_folder_items}</var>
<arg>${local_folder_path}</arg>
<doc>Returns and logs items in a directory, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:16:26.025" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:16:26.025" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:16:26.026" level="INFO">@{local_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:16:26.024" endtime="20241223 16:16:26.026"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${local_list_length}</var>
<arg>${local_folder_items}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:16:26.027" level="INFO">Length is 1</msg>
<msg timestamp="20241223 16:16:26.027" level="INFO">${local_list_length} = 1</msg>
<status status="PASS" starttime="20241223 16:16:26.026" endtime="20241223 16:16:26.027"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${parent_path}</var>
<var>${copied_subfolder}</var>
<arg>${local_folder_path}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20241223 16:16:26.028" level="INFO">${parent_path} = c:\QA\robot_tmp</msg>
<msg timestamp="20241223 16:16:26.028" level="INFO">${copied_subfolder} = 1MB</msg>
<status status="PASS" starttime="20241223 16:16:26.028" endtime="20241223 16:16:26.029"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_folder_path_after_copy}</var>
<arg>${remote_folder_path}/${copied_subfolder}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:16:26.030" level="INFO">${remote_folder_path_after_copy} = /tmp/1MB</msg>
<status status="PASS" starttime="20241223 16:16:26.029" endtime="20241223 16:16:26.030"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${start_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:16:26.031" level="INFO">${start_time} = 2024-12-23 16:16:26.030583</msg>
<status status="PASS" starttime="20241223 16:16:26.030" endtime="20241223 16:16:26.031"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${local_folder_path}</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20241223 16:16:26.032" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:16:26.033" level="INFO">1 file:
1MB.txt</msg>
<msg timestamp="20241223 16:16:26.033" level="INFO">@{files} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:16:26.031" endtime="20241223 16:16:26.033"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${transferred _size}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:16:26.034" level="INFO">${transferred _size} = 0</msg>
<status status="PASS" starttime="20241223 16:16:26.033" endtime="20241223 16:16:26.034"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${file}">1MB.txt</var>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_file_path}</var>
<arg>${remote_folder_path_after_copy}/${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:16:26.036" level="INFO">${remote_file_path} = /tmp/1MB/1MB.txt</msg>
<status status="PASS" starttime="20241223 16:16:26.036" endtime="20241223 16:16:26.036"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${local_file_path}</var>
<arg>${local_folder_path}\\${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:16:26.037" level="INFO">${local_file_path} = c:\QA\robot_tmp\1MB\1MB.txt</msg>
<status status="PASS" starttime="20241223 16:16:26.037" endtime="20241223 16:16:26.038"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Local file: ${local_file_path}</arg>
<arg>-- ${file} is uploading to remote destination: ${remote_file_path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:26.038" endtime="20241223 16:16:26.039"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${size}</var>
<arg>os.path.getsize(r"""${local_file_path}""")</arg>
<arg>modules=os</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:16:26.041" level="INFO">${size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:16:26.040" endtime="20241223 16:16:26.041"/>
</kw>
<kw name="Put File" library="SSHLibrary">
<arg>${local_file_path}</arg>
<arg>${remote_file_path}</arg>
<doc>Uploads file(s) from the local machine to the remote machine.</doc>
<msg timestamp="20241223 16:16:48.518" level="INFO">'c:\QA\robot_tmp\1MB\1MB.txt' -&gt; '/tmp/1MB/1MB.txt'</msg>
<status status="PASS" starttime="20241223 16:16:26.041" endtime="20241223 16:16:48.518"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${transferred_size}</var>
<arg>${transferred_size}+${size}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:16:48.520" level="INFO">${transferred_size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:16:48.519" endtime="20241223 16:16:48.520"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>size ${size} \(total: ${transferred size}\) file: ${file} is uploaded.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:48.521" endtime="20241223 16:16:48.522"/>
</kw>
<status status="PASS" starttime="20241223 16:16:26.035" endtime="20241223 16:16:48.522"/>
</iter>
<status status="PASS" starttime="20241223 16:16:26.034" endtime="20241223 16:16:48.523"/>
</for>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_complete_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:16:48.524" endtime="20241223 16:16:48.801"/>
</kw>
<msg timestamp="20241223 16:16:48.802" level="INFO">${remote_folder_complete_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:16:48.523" endtime="20241223 16:16:48.802"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_complete_path_exists}">
<kw name="List Directory" library="SSHLibrary">
<var>@{remote_folder_items}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:16:50.216" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:16:50.216" level="INFO">@{remote_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:16:48.803" endtime="20241223 16:16:50.216"/>
</kw>
<status status="PASS" starttime="20241223 16:16:48.802" endtime="20241223 16:16:50.217"/>
</branch>
<status status="PASS" starttime="20241223 16:16:48.802" endtime="20241223 16:16:50.217"/>
</if>
<kw name="Get Current Date" library="DateTime">
<var>${stop_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:16:50.218" level="INFO">${stop_time} = 2024-12-23 16:16:50.218493</msg>
<status status="PASS" starttime="20241223 16:16:50.218" endtime="20241223 16:16:50.219"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${duration}</var>
<arg>(datetime.datetime.strptime('${stop_time}', '${timestamp_format}') - datetime.datetime.strptime('${start_time}', '${timestamp_format}')).total_seconds()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:16:50.220" level="INFO">${duration} = 24.18791</msg>
<status status="PASS" starttime="20241223 16:16:50.219" endtime="20241223 16:16:50.220"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${remote_list_length}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:16:50.221" level="INFO">Length is 8</msg>
<msg timestamp="20241223 16:16:50.221" level="INFO">${remote_list_length} = 8</msg>
<status status="PASS" starttime="20241223 16:16:50.220" endtime="20241223 16:16:50.221"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:16:51.633" level="INFO">7 items:
.err
1MB
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:16:51.633" level="INFO">@{items} = [ .err | 1MB | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | system...</msg>
<status status="PASS" starttime="20241223 16:16:50.222" endtime="20241223 16:16:51.633"/>
</kw>
<kw name="Remote Folder Remove">
<arg>${remote_folder_path_after_copy}</arg>
<kw name="Execute Command" library="SSHLibrary">
<var>${output}</var>
<arg>rm -rf ${remote_folder_path}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20241223 16:16:51.635" level="INFO">Executing command 'rm -rf /tmp/1MB'.</msg>
<msg timestamp="20241223 16:16:52.210" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20241223 16:16:52.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241223 16:16:51.635" endtime="20241223 16:16:52.212"/>
</kw>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:16:52.213" endtime="20241223 16:16:52.766"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Remote directory ${remote_folder_path} removed\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:52.766" endtime="20241223 16:16:52.768"/>
</kw>
<status status="PASS" starttime="20241223 16:16:51.634" endtime="20241223 16:16:52.768"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_not_exists}</var>
<arg>SSHLibrary.Directory Should Not Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:16:52.769" endtime="20241223 16:16:53.049"/>
</kw>
<msg timestamp="20241223 16:16:53.050" level="INFO">${remote_folder_path_not_exists} = True</msg>
<status status="PASS" starttime="20241223 16:16:52.769" endtime="20241223 16:16:53.050"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_not_exists}">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder deleted OK : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:53.051" endtime="20241223 16:16:53.052"/>
</kw>
<status status="PASS" starttime="20241223 16:16:53.051" endtime="20241223 16:16:53.053"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder NOT deleted : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:16:53.053" endtime="20241223 16:16:53.054"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:16:53.053" endtime="20241223 16:16:53.054"/>
</branch>
<status status="PASS" starttime="20241223 16:16:53.050" endtime="20241223 16:16:53.054"/>
</if>
<status status="PASS" starttime="20241223 16:16:26.024" endtime="20241223 16:16:53.054"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:16:53.055" endtime="20241223 16:16:53.055"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:16:53.056" endtime="20241223 16:16:53.056"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:16:53.055" endtime="20241223 16:16:53.056"/>
</branch>
<status status="PASS" starttime="20241223 16:16:26.023" endtime="20241223 16:16:53.056"/>
</if>
<status status="PASS" starttime="20241223 16:16:25.744" endtime="20241223 16:16:53.056"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:16:53.057" endtime="20241223 16:16:53.058"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:16:53.058" endtime="20241223 16:16:53.058"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:16:53.057" endtime="20241223 16:16:53.059"/>
</branch>
<status status="PASS" starttime="20241223 16:16:25.744" endtime="20241223 16:16:53.059"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${average_speed}</var>
<arg>round((${transferred_size} / 1024) / ${duration}, 2)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:16:53.060" level="INFO">${average_speed} = 42.33</msg>
<status status="PASS" starttime="20241223 16:16:53.059" endtime="20241223 16:16:53.060"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Number of copied items: ${local_list_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:53.060" endtime="20241223 16:16:53.061"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Total size: ${transferred_size} bytes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:53.061" endtime="20241223 16:16:53.062"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Time to copy: ${duration}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:53.063" endtime="20241223 16:16:53.063"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Average Speed: ${average_speed} KB/</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:16:53.064" endtime="20241223 16:16:53.065"/>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20241223 16:16:53.066" endtime="20241223 16:16:53.067"/>
</kw>
<status status="PASS" starttime="20241223 16:16:16.089" endtime="20241223 16:16:53.067"/>
</kw>
<kw name="Stop Clumsy">
<arg>${process}</arg>
<kw name="Terminate Process" library="Process">
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20241223 16:16:53.069" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20241223 16:17:23.132" level="INFO">Graceful termination failed.</msg>
<msg timestamp="20241223 16:17:23.132" level="INFO">Forcefully killing process.</msg>
<msg timestamp="20241223 16:17:23.233" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20241223 16:16:53.068" endtime="20241223 16:17:23.234"/>
</kw>
<status status="PASS" starttime="20241223 16:16:53.067" endtime="20241223 16:17:23.234"/>
</kw>
<status status="PASS" starttime="20241223 16:16:16.069" endtime="20241223 16:17:23.235"/>
</kw>
<kw name="Upload With Bandwidth Limit By Clumsy">
<arg>host=10.78.185.37</arg>
<arg>username=fx3000</arg>
<arg>password=Systemuser!</arg>
<arg>upload_folder=c:\\QA\\robot_tmp\\1MB</arg>
<arg>bandwidth_limit=300</arg>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>${CLUMSY_PATH}clumsy.exe</arg>
<arg>--bandwidth</arg>
<arg>on</arg>
<arg>--bandwidth-inbound</arg>
<arg>on</arg>
<arg>--bandwidth-outbound</arg>
<arg>on</arg>
<arg>--bandwidth-bandwidth</arg>
<arg>${bandwidth_limit}</arg>
<arg>alias=clumsy_03</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20241223 16:17:23.238" level="INFO">Starting process:
C:/QA/temp/clumsy_03/clumsy.exe --bandwidth on --bandwidth-inbound on --bandwidth-outbound on --bandwidth-bandwidth 300</msg>
<msg timestamp="20241223 16:17:23.253" level="INFO">${process} = &lt;Popen: returncode: None args: ['C:/QA/temp/clumsy_03/clumsy.exe', '--bandwi...&gt;</msg>
<status status="PASS" starttime="20241223 16:17:23.237" endtime="20241223 16:17:23.253"/>
</kw>
<kw name="Test SFTP Upload All Folder Files To Remote">
<arg>${host}</arg>
<arg>${alias}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>5</arg>
<arg>${upload_folder}</arg>
<arg>/tmp</arg>
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=${alias}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20241223 16:17:23.255" endtime="20241223 16:17:23.256"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${username}</arg>
<arg>${password}</arg>
<arg>delay=${delay}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20241223 16:17:23.258" level="INFO">Logging into '10.78.185.37:22' as 'fx3000'.</msg>
<msg timestamp="20241223 16:17:29.139" level="INFO">Read output: Last login: Mon Dec 23 16:16:19 2024 from 10.80.192.99
FX-3000-X Controller
Powered by Anvil Platform
Fidelix Tech Oy
fx3000@fx3000-10880847:~$</msg>
<status status="PASS" starttime="20241223 16:17:23.256" endtime="20241223 16:17:29.140"/>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<var>${connection_info}</var>
<doc>Returns information about the connection.</doc>
<msg timestamp="20241223 16:17:29.141" level="INFO">index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<msg timestamp="20241223 16:17:29.141" level="INFO">${connection_info} = index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<status status="PASS" starttime="20241223 16:17:29.140" endtime="20241223 16:17:29.141"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Connection info: ${connection_info}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:17:29.142" endtime="20241223 16:17:29.144"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:17:29.239" level="INFO">[chan 1] Opened sftp connection (server version 3)</msg>
<msg timestamp="20241223 16:17:29.426" level="INFO">6 items:
.err
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:17:29.427" level="INFO">@{items} = [ .err | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | systemd-priv...</msg>
<status status="PASS" starttime="20241223 16:17:29.145" endtime="20241223 16:17:29.427"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${local_folder_path_exists}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>${local_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${local_folder_path}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20241223 16:17:29.429" level="INFO" html="true">Directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20241223 16:17:29.428" endtime="20241223 16:17:29.429"/>
</kw>
<msg timestamp="20241223 16:17:29.430" level="INFO">${local_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:17:29.427" endtime="20241223 16:17:29.430"/>
</kw>
<if>
<branch type="IF" condition="${local_folder_path_exists}">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:17:29.432" endtime="20241223 16:17:29.463"/>
</kw>
<msg timestamp="20241223 16:17:29.464" level="INFO">${remote_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:17:29.431" endtime="20241223 16:17:29.464"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_exists}">
<kw name="List Directory" library="OperatingSystem">
<var>@{local_folder_items}</var>
<arg>${local_folder_path}</arg>
<doc>Returns and logs items in a directory, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:17:29.466" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:17:29.466" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:17:29.467" level="INFO">@{local_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:17:29.465" endtime="20241223 16:17:29.467"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${local_list_length}</var>
<arg>${local_folder_items}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:17:29.468" level="INFO">Length is 1</msg>
<msg timestamp="20241223 16:17:29.468" level="INFO">${local_list_length} = 1</msg>
<status status="PASS" starttime="20241223 16:17:29.467" endtime="20241223 16:17:29.468"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${parent_path}</var>
<var>${copied_subfolder}</var>
<arg>${local_folder_path}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20241223 16:17:29.469" level="INFO">${parent_path} = c:\QA\robot_tmp</msg>
<msg timestamp="20241223 16:17:29.469" level="INFO">${copied_subfolder} = 1MB</msg>
<status status="PASS" starttime="20241223 16:17:29.468" endtime="20241223 16:17:29.469"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_folder_path_after_copy}</var>
<arg>${remote_folder_path}/${copied_subfolder}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:17:29.470" level="INFO">${remote_folder_path_after_copy} = /tmp/1MB</msg>
<status status="PASS" starttime="20241223 16:17:29.470" endtime="20241223 16:17:29.470"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${start_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:17:29.472" level="INFO">${start_time} = 2024-12-23 16:17:29.471412</msg>
<status status="PASS" starttime="20241223 16:17:29.471" endtime="20241223 16:17:29.472"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${local_folder_path}</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20241223 16:17:29.473" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:17:29.473" level="INFO">1 file:
1MB.txt</msg>
<msg timestamp="20241223 16:17:29.474" level="INFO">@{files} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:17:29.472" endtime="20241223 16:17:29.474"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${transferred _size}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:17:29.475" level="INFO">${transferred _size} = 0</msg>
<status status="PASS" starttime="20241223 16:17:29.474" endtime="20241223 16:17:29.475"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${file}">1MB.txt</var>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_file_path}</var>
<arg>${remote_folder_path_after_copy}/${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:17:29.477" level="INFO">${remote_file_path} = /tmp/1MB/1MB.txt</msg>
<status status="PASS" starttime="20241223 16:17:29.476" endtime="20241223 16:17:29.477"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${local_file_path}</var>
<arg>${local_folder_path}\\${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:17:29.478" level="INFO">${local_file_path} = c:\QA\robot_tmp\1MB\1MB.txt</msg>
<status status="PASS" starttime="20241223 16:17:29.477" endtime="20241223 16:17:29.478"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Local file: ${local_file_path}</arg>
<arg>-- ${file} is uploading to remote destination: ${remote_file_path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:17:29.479" endtime="20241223 16:17:29.480"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${size}</var>
<arg>os.path.getsize(r"""${local_file_path}""")</arg>
<arg>modules=os</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:17:29.482" level="INFO">${size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:17:29.481" endtime="20241223 16:17:29.482"/>
</kw>
<kw name="Put File" library="SSHLibrary">
<arg>${local_file_path}</arg>
<arg>${remote_file_path}</arg>
<doc>Uploads file(s) from the local machine to the remote machine.</doc>
<msg timestamp="20241223 16:17:33.736" level="INFO">'c:\QA\robot_tmp\1MB\1MB.txt' -&gt; '/tmp/1MB/1MB.txt'</msg>
<status status="PASS" starttime="20241223 16:17:29.482" endtime="20241223 16:17:33.736"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${transferred_size}</var>
<arg>${transferred_size}+${size}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:17:33.738" level="INFO">${transferred_size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:17:33.737" endtime="20241223 16:17:33.738"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>size ${size} \(total: ${transferred size}\) file: ${file} is uploaded.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:17:33.738" endtime="20241223 16:17:33.739"/>
</kw>
<status status="PASS" starttime="20241223 16:17:29.476" endtime="20241223 16:17:33.740"/>
</iter>
<status status="PASS" starttime="20241223 16:17:29.475" endtime="20241223 16:17:33.740"/>
</for>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_complete_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:17:33.741" endtime="20241223 16:17:33.776"/>
</kw>
<msg timestamp="20241223 16:17:33.776" level="INFO">${remote_folder_complete_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:17:33.741" endtime="20241223 16:17:33.776"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_complete_path_exists}">
<kw name="List Directory" library="SSHLibrary">
<var>@{remote_folder_items}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:17:33.942" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:17:33.943" level="INFO">@{remote_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:17:33.778" endtime="20241223 16:17:33.943"/>
</kw>
<status status="PASS" starttime="20241223 16:17:33.777" endtime="20241223 16:17:33.943"/>
</branch>
<status status="PASS" starttime="20241223 16:17:33.777" endtime="20241223 16:17:33.944"/>
</if>
<kw name="Get Current Date" library="DateTime">
<var>${stop_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:17:33.945" level="INFO">${stop_time} = 2024-12-23 16:17:33.944926</msg>
<status status="PASS" starttime="20241223 16:17:33.944" endtime="20241223 16:17:33.945"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${duration}</var>
<arg>(datetime.datetime.strptime('${stop_time}', '${timestamp_format}') - datetime.datetime.strptime('${start_time}', '${timestamp_format}')).total_seconds()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:17:33.946" level="INFO">${duration} = 4.473514</msg>
<status status="PASS" starttime="20241223 16:17:33.946" endtime="20241223 16:17:33.947"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${remote_list_length}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:17:33.948" level="INFO">Length is 8</msg>
<msg timestamp="20241223 16:17:33.948" level="INFO">${remote_list_length} = 8</msg>
<status status="PASS" starttime="20241223 16:17:33.947" endtime="20241223 16:17:33.948"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:17:34.114" level="INFO">7 items:
.err
1MB
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:17:34.114" level="INFO">@{items} = [ .err | 1MB | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | system...</msg>
<status status="PASS" starttime="20241223 16:17:33.949" endtime="20241223 16:17:34.114"/>
</kw>
<kw name="Remote Folder Remove">
<arg>${remote_folder_path_after_copy}</arg>
<kw name="Execute Command" library="SSHLibrary">
<var>${output}</var>
<arg>rm -rf ${remote_folder_path}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20241223 16:17:34.117" level="INFO">Executing command 'rm -rf /tmp/1MB'.</msg>
<msg timestamp="20241223 16:17:34.223" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20241223 16:17:34.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241223 16:17:34.116" endtime="20241223 16:17:34.224"/>
</kw>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:17:34.225" endtime="20241223 16:17:34.320"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Remote directory ${remote_folder_path} removed\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:17:34.320" endtime="20241223 16:17:34.322"/>
</kw>
<status status="PASS" starttime="20241223 16:17:34.115" endtime="20241223 16:17:34.322"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_not_exists}</var>
<arg>SSHLibrary.Directory Should Not Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:17:34.323" endtime="20241223 16:17:34.353"/>
</kw>
<msg timestamp="20241223 16:17:34.354" level="INFO">${remote_folder_path_not_exists} = True</msg>
<status status="PASS" starttime="20241223 16:17:34.323" endtime="20241223 16:17:34.354"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_not_exists}">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder deleted OK : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:17:34.355" endtime="20241223 16:17:34.356"/>
</kw>
<status status="PASS" starttime="20241223 16:17:34.354" endtime="20241223 16:17:34.356"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder NOT deleted : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:17:34.357" endtime="20241223 16:17:34.358"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:17:34.357" endtime="20241223 16:17:34.358"/>
</branch>
<status status="PASS" starttime="20241223 16:17:34.354" endtime="20241223 16:17:34.358"/>
</if>
<status status="PASS" starttime="20241223 16:17:29.464" endtime="20241223 16:17:34.358"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:17:34.359" endtime="20241223 16:17:34.359"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:17:34.360" endtime="20241223 16:17:34.360"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:17:34.359" endtime="20241223 16:17:34.360"/>
</branch>
<status status="PASS" starttime="20241223 16:17:29.464" endtime="20241223 16:17:34.360"/>
</if>
<status status="PASS" starttime="20241223 16:17:29.431" endtime="20241223 16:17:34.361"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:17:34.362" endtime="20241223 16:17:34.362"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:17:34.362" endtime="20241223 16:17:34.363"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:17:34.361" endtime="20241223 16:17:34.363"/>
</branch>
<status status="PASS" starttime="20241223 16:17:29.430" endtime="20241223 16:17:34.363"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${average_speed}</var>
<arg>round((${transferred_size} / 1024) / ${duration}, 2)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:17:34.364" level="INFO">${average_speed} = 228.89</msg>
<status status="PASS" starttime="20241223 16:17:34.363" endtime="20241223 16:17:34.364"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Number of copied items: ${local_list_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:17:34.365" endtime="20241223 16:17:34.366"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Total size: ${transferred_size} bytes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:17:34.366" endtime="20241223 16:17:34.367"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Time to copy: ${duration}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:17:34.367" endtime="20241223 16:17:34.368"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Average Speed: ${average_speed} KB/</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:17:34.369" endtime="20241223 16:17:34.369"/>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20241223 16:17:34.370" endtime="20241223 16:17:34.371"/>
</kw>
<status status="PASS" starttime="20241223 16:17:23.254" endtime="20241223 16:17:34.372"/>
</kw>
<kw name="Stop Clumsy">
<arg>${process}</arg>
<kw name="Terminate Process" library="Process">
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20241223 16:17:34.373" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20241223 16:18:04.433" level="INFO">Graceful termination failed.</msg>
<msg timestamp="20241223 16:18:04.434" level="INFO">Forcefully killing process.</msg>
<msg timestamp="20241223 16:18:04.535" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20241223 16:17:34.373" endtime="20241223 16:18:04.535"/>
</kw>
<status status="PASS" starttime="20241223 16:17:34.372" endtime="20241223 16:18:04.536"/>
</kw>
<status status="PASS" starttime="20241223 16:17:23.236" endtime="20241223 16:18:04.536"/>
</kw>
<kw name="Upload With Drop By Clumsy">
<arg>host=10.78.185.37</arg>
<arg>username=fx3000</arg>
<arg>password=Systemuser!</arg>
<arg>upload_folder=c:\\QA\\robot_tmp\\1MB</arg>
<arg>drop_chance=10</arg>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>${CLUMSY_PATH}clumsy.exe</arg>
<arg>--drop</arg>
<arg>on</arg>
<arg>--drop-inbound</arg>
<arg>on</arg>
<arg>--drop-outbound</arg>
<arg>on</arg>
<arg>--drop-chance</arg>
<arg>${drop_chance}</arg>
<arg>alias=clumsy_03</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20241223 16:18:04.540" level="INFO">Starting process:
C:/QA/temp/clumsy_03/clumsy.exe --drop on --drop-inbound on --drop-outbound on --drop-chance 10</msg>
<msg timestamp="20241223 16:18:04.548" level="INFO">${process} = &lt;Popen: returncode: None args: ['C:/QA/temp/clumsy_03/clumsy.exe', '--drop',...&gt;</msg>
<status status="PASS" starttime="20241223 16:18:04.539" endtime="20241223 16:18:04.549"/>
</kw>
<kw name="Test SFTP Upload All Folder Files To Remote">
<arg>${host}</arg>
<arg>${alias}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>5</arg>
<arg>${upload_folder}</arg>
<arg>/tmp</arg>
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=${alias}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20241223 16:18:04.551" endtime="20241223 16:18:04.551"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${username}</arg>
<arg>${password}</arg>
<arg>delay=${delay}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20241223 16:18:04.552" level="INFO">Logging into '10.78.185.37:22' as 'fx3000'.</msg>
<msg timestamp="20241223 16:18:10.997" level="INFO">Read output: Last login: Mon Dec 23 16:17:25 2024 from 10.80.192.99
FX-3000-X Controller
Powered by Anvil Platform
Fidelix Tech Oy
fx3000@fx3000-10880847:~$</msg>
<status status="PASS" starttime="20241223 16:18:04.552" endtime="20241223 16:18:10.998"/>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<var>${connection_info}</var>
<doc>Returns information about the connection.</doc>
<msg timestamp="20241223 16:18:10.999" level="INFO">index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<msg timestamp="20241223 16:18:10.999" level="INFO">${connection_info} = index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<status status="PASS" starttime="20241223 16:18:10.999" endtime="20241223 16:18:11.000"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Connection info: ${connection_info}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:18:11.000" endtime="20241223 16:18:11.003"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:18:11.125" level="INFO">[chan 1] Opened sftp connection (server version 3)</msg>
<msg timestamp="20241223 16:18:11.658" level="INFO">6 items:
.err
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:18:11.659" level="INFO">@{items} = [ .err | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | systemd-priv...</msg>
<status status="PASS" starttime="20241223 16:18:11.004" endtime="20241223 16:18:11.659"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${local_folder_path_exists}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>${local_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${local_folder_path}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20241223 16:18:11.661" level="INFO" html="true">Directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20241223 16:18:11.660" endtime="20241223 16:18:11.661"/>
</kw>
<msg timestamp="20241223 16:18:11.661" level="INFO">${local_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:18:11.659" endtime="20241223 16:18:11.661"/>
</kw>
<if>
<branch type="IF" condition="${local_folder_path_exists}">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:18:11.663" endtime="20241223 16:18:11.695"/>
</kw>
<msg timestamp="20241223 16:18:11.696" level="INFO">${remote_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:18:11.662" endtime="20241223 16:18:11.696"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_exists}">
<kw name="List Directory" library="OperatingSystem">
<var>@{local_folder_items}</var>
<arg>${local_folder_path}</arg>
<doc>Returns and logs items in a directory, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:18:11.697" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:18:11.698" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:18:11.699" level="INFO">@{local_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:18:11.697" endtime="20241223 16:18:11.699"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${local_list_length}</var>
<arg>${local_folder_items}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:18:11.700" level="INFO">Length is 1</msg>
<msg timestamp="20241223 16:18:11.701" level="INFO">${local_list_length} = 1</msg>
<status status="PASS" starttime="20241223 16:18:11.700" endtime="20241223 16:18:11.701"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${parent_path}</var>
<var>${copied_subfolder}</var>
<arg>${local_folder_path}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20241223 16:18:11.702" level="INFO">${parent_path} = c:\QA\robot_tmp</msg>
<msg timestamp="20241223 16:18:11.702" level="INFO">${copied_subfolder} = 1MB</msg>
<status status="PASS" starttime="20241223 16:18:11.701" endtime="20241223 16:18:11.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_folder_path_after_copy}</var>
<arg>${remote_folder_path}/${copied_subfolder}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:18:11.703" level="INFO">${remote_folder_path_after_copy} = /tmp/1MB</msg>
<status status="PASS" starttime="20241223 16:18:11.703" endtime="20241223 16:18:11.704"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${start_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:18:11.705" level="INFO">${start_time} = 2024-12-23 16:18:11.704507</msg>
<status status="PASS" starttime="20241223 16:18:11.704" endtime="20241223 16:18:11.705"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${local_folder_path}</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20241223 16:18:11.706" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:18:11.707" level="INFO">1 file:
1MB.txt</msg>
<msg timestamp="20241223 16:18:11.707" level="INFO">@{files} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:18:11.705" endtime="20241223 16:18:11.707"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${transferred _size}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:18:11.708" level="INFO">${transferred _size} = 0</msg>
<status status="PASS" starttime="20241223 16:18:11.708" endtime="20241223 16:18:11.708"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${file}">1MB.txt</var>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_file_path}</var>
<arg>${remote_folder_path_after_copy}/${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:18:11.710" level="INFO">${remote_file_path} = /tmp/1MB/1MB.txt</msg>
<status status="PASS" starttime="20241223 16:18:11.710" endtime="20241223 16:18:11.710"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${local_file_path}</var>
<arg>${local_folder_path}\\${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:18:11.711" level="INFO">${local_file_path} = c:\QA\robot_tmp\1MB\1MB.txt</msg>
<status status="PASS" starttime="20241223 16:18:11.711" endtime="20241223 16:18:11.711"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Local file: ${local_file_path}</arg>
<arg>-- ${file} is uploading to remote destination: ${remote_file_path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:18:11.712" endtime="20241223 16:18:11.713"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${size}</var>
<arg>os.path.getsize(r"""${local_file_path}""")</arg>
<arg>modules=os</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:18:11.715" level="INFO">${size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:18:11.714" endtime="20241223 16:18:11.715"/>
</kw>
<kw name="Put File" library="SSHLibrary">
<arg>${local_file_path}</arg>
<arg>${remote_file_path}</arg>
<doc>Uploads file(s) from the local machine to the remote machine.</doc>
<msg timestamp="20241223 16:18:39.107" level="INFO">'c:\QA\robot_tmp\1MB\1MB.txt' -&gt; '/tmp/1MB/1MB.txt'</msg>
<status status="PASS" starttime="20241223 16:18:11.715" endtime="20241223 16:18:39.108"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${transferred_size}</var>
<arg>${transferred_size}+${size}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:18:39.109" level="INFO">${transferred_size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:18:39.109" endtime="20241223 16:18:39.110"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>size ${size} \(total: ${transferred size}\) file: ${file} is uploaded.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:18:39.110" endtime="20241223 16:18:39.111"/>
</kw>
<status status="PASS" starttime="20241223 16:18:11.709" endtime="20241223 16:18:39.112"/>
</iter>
<status status="PASS" starttime="20241223 16:18:11.709" endtime="20241223 16:18:39.112"/>
</for>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_complete_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:18:39.113" endtime="20241223 16:18:39.144"/>
</kw>
<msg timestamp="20241223 16:18:39.144" level="INFO">${remote_folder_complete_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:18:39.113" endtime="20241223 16:18:39.145"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_complete_path_exists}">
<kw name="List Directory" library="SSHLibrary">
<var>@{remote_folder_items}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:18:39.544" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:18:39.545" level="INFO">@{remote_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:18:39.145" endtime="20241223 16:18:39.545"/>
</kw>
<status status="PASS" starttime="20241223 16:18:39.145" endtime="20241223 16:18:39.545"/>
</branch>
<status status="PASS" starttime="20241223 16:18:39.145" endtime="20241223 16:18:39.545"/>
</if>
<kw name="Get Current Date" library="DateTime">
<var>${stop_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:18:39.546" level="INFO">${stop_time} = 2024-12-23 16:18:39.546210</msg>
<status status="PASS" starttime="20241223 16:18:39.546" endtime="20241223 16:18:39.547"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${duration}</var>
<arg>(datetime.datetime.strptime('${stop_time}', '${timestamp_format}') - datetime.datetime.strptime('${start_time}', '${timestamp_format}')).total_seconds()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:18:39.548" level="INFO">${duration} = 27.841703</msg>
<status status="PASS" starttime="20241223 16:18:39.547" endtime="20241223 16:18:39.548"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${remote_list_length}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:18:39.549" level="INFO">Length is 8</msg>
<msg timestamp="20241223 16:18:39.550" level="INFO">${remote_list_length} = 8</msg>
<status status="PASS" starttime="20241223 16:18:39.549" endtime="20241223 16:18:39.550"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:18:40.742" level="INFO">7 items:
.err
1MB
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:18:40.743" level="INFO">@{items} = [ .err | 1MB | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | system...</msg>
<status status="PASS" starttime="20241223 16:18:39.550" endtime="20241223 16:18:40.743"/>
</kw>
<kw name="Remote Folder Remove">
<arg>${remote_folder_path_after_copy}</arg>
<kw name="Execute Command" library="SSHLibrary">
<var>${output}</var>
<arg>rm -rf ${remote_folder_path}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20241223 16:18:40.746" level="INFO">Executing command 'rm -rf /tmp/1MB'.</msg>
<msg timestamp="20241223 16:18:41.181" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20241223 16:18:41.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241223 16:18:40.745" endtime="20241223 16:18:41.181"/>
</kw>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:18:41.182" endtime="20241223 16:18:41.270"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Remote directory ${remote_folder_path} removed\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:18:41.271" endtime="20241223 16:18:41.272"/>
</kw>
<status status="PASS" starttime="20241223 16:18:40.743" endtime="20241223 16:18:41.273"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_not_exists}</var>
<arg>SSHLibrary.Directory Should Not Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:18:41.274" endtime="20241223 16:18:41.305"/>
</kw>
<msg timestamp="20241223 16:18:41.305" level="INFO">${remote_folder_path_not_exists} = True</msg>
<status status="PASS" starttime="20241223 16:18:41.273" endtime="20241223 16:18:41.306"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_not_exists}">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder deleted OK : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:18:41.307" endtime="20241223 16:18:41.307"/>
</kw>
<status status="PASS" starttime="20241223 16:18:41.306" endtime="20241223 16:18:41.308"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder NOT deleted : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:18:41.308" endtime="20241223 16:18:41.309"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:18:41.308" endtime="20241223 16:18:41.309"/>
</branch>
<status status="PASS" starttime="20241223 16:18:41.306" endtime="20241223 16:18:41.309"/>
</if>
<status status="PASS" starttime="20241223 16:18:11.696" endtime="20241223 16:18:41.309"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:18:41.310" endtime="20241223 16:18:41.311"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:18:41.311" endtime="20241223 16:18:41.312"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:18:41.310" endtime="20241223 16:18:41.312"/>
</branch>
<status status="PASS" starttime="20241223 16:18:11.696" endtime="20241223 16:18:41.313"/>
</if>
<status status="PASS" starttime="20241223 16:18:11.662" endtime="20241223 16:18:41.313"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:18:41.314" endtime="20241223 16:18:41.314"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:18:41.314" endtime="20241223 16:18:41.314"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:18:41.313" endtime="20241223 16:18:41.315"/>
</branch>
<status status="PASS" starttime="20241223 16:18:11.662" endtime="20241223 16:18:41.315"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${average_speed}</var>
<arg>round((${transferred_size} / 1024) / ${duration}, 2)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:18:41.316" level="INFO">${average_speed} = 36.78</msg>
<status status="PASS" starttime="20241223 16:18:41.315" endtime="20241223 16:18:41.316"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Number of copied items: ${local_list_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:18:41.317" endtime="20241223 16:18:41.317"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Total size: ${transferred_size} bytes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:18:41.318" endtime="20241223 16:18:41.318"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Time to copy: ${duration}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:18:41.319" endtime="20241223 16:18:41.320"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Average Speed: ${average_speed} KB/</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:18:41.320" endtime="20241223 16:18:41.321"/>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20241223 16:18:41.321" endtime="20241223 16:18:41.322"/>
</kw>
<status status="PASS" starttime="20241223 16:18:04.549" endtime="20241223 16:18:41.323"/>
</kw>
<kw name="Stop Clumsy">
<arg>${process}</arg>
<kw name="Terminate Process" library="Process">
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20241223 16:18:41.325" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20241223 16:19:11.387" level="INFO">Graceful termination failed.</msg>
<msg timestamp="20241223 16:19:11.388" level="INFO">Forcefully killing process.</msg>
<msg timestamp="20241223 16:19:11.488" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20241223 16:18:41.324" endtime="20241223 16:19:11.488"/>
</kw>
<status status="PASS" starttime="20241223 16:18:41.323" endtime="20241223 16:19:11.489"/>
</kw>
<status status="PASS" starttime="20241223 16:18:04.537" endtime="20241223 16:19:11.489"/>
</kw>
<kw name="Upload With Duplicate By Clumsy">
<arg>host=10.78.185.37</arg>
<arg>username=fx3000</arg>
<arg>password=Systemuser!</arg>
<arg>upload_folder=c:\\QA\\robot_tmp\\1MB</arg>
<arg>duplicate_count=2</arg>
<arg>duplicate_chance=10</arg>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>${CLUMSY_PATH}clumsy.exe</arg>
<arg>--duplicate</arg>
<arg>on</arg>
<arg>--duplicate-inbound</arg>
<arg>on</arg>
<arg>--duplicate-outbound</arg>
<arg>on</arg>
<arg>--duplicate-count</arg>
<arg>${duplicate_count}</arg>
<arg>--duplicate-chance</arg>
<arg>${duplicate_chance}</arg>
<arg>alias=clumsy_03</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20241223 16:19:11.492" level="INFO">Starting process:
C:/QA/temp/clumsy_03/clumsy.exe --duplicate on --duplicate-inbound on --duplicate-outbound on --duplicate-count 2 --duplicate-chance 10</msg>
<msg timestamp="20241223 16:19:11.500" level="INFO">${process} = &lt;Popen: returncode: None args: ['C:/QA/temp/clumsy_03/clumsy.exe', '--duplic...&gt;</msg>
<status status="PASS" starttime="20241223 16:19:11.491" endtime="20241223 16:19:11.500"/>
</kw>
<kw name="Test SFTP Upload All Folder Files To Remote">
<arg>${host}</arg>
<arg>${alias}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>5</arg>
<arg>${upload_folder}</arg>
<arg>/tmp</arg>
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=${alias}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20241223 16:19:11.502" endtime="20241223 16:19:11.504"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${username}</arg>
<arg>${password}</arg>
<arg>delay=${delay}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20241223 16:19:11.506" level="INFO">Logging into '10.78.185.37:22' as 'fx3000'.</msg>
<msg timestamp="20241223 16:19:17.444" level="INFO">Read output: Last login: Mon Dec 23 16:18:07 2024 from 10.80.192.99
FX-3000-X Controller
Powered by Anvil Platform
Fidelix Tech Oy
fx3000@fx3000-10880847:~$</msg>
<status status="PASS" starttime="20241223 16:19:11.504" endtime="20241223 16:19:17.446"/>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<var>${connection_info}</var>
<doc>Returns information about the connection.</doc>
<msg timestamp="20241223 16:19:17.447" level="INFO">index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<msg timestamp="20241223 16:19:17.447" level="INFO">${connection_info} = index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<status status="PASS" starttime="20241223 16:19:17.446" endtime="20241223 16:19:17.447"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Connection info: ${connection_info}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:17.448" endtime="20241223 16:19:17.450"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:19:17.551" level="INFO">[chan 1] Opened sftp connection (server version 3)</msg>
<msg timestamp="20241223 16:19:17.738" level="INFO">6 items:
.err
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:19:17.739" level="INFO">@{items} = [ .err | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | systemd-priv...</msg>
<status status="PASS" starttime="20241223 16:19:17.450" endtime="20241223 16:19:17.739"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${local_folder_path_exists}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>${local_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${local_folder_path}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20241223 16:19:17.741" level="INFO" html="true">Directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20241223 16:19:17.740" endtime="20241223 16:19:17.741"/>
</kw>
<msg timestamp="20241223 16:19:17.742" level="INFO">${local_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:19:17.740" endtime="20241223 16:19:17.742"/>
</kw>
<if>
<branch type="IF" condition="${local_folder_path_exists}">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:19:17.743" endtime="20241223 16:19:17.773"/>
</kw>
<msg timestamp="20241223 16:19:17.774" level="INFO">${remote_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:19:17.743" endtime="20241223 16:19:17.774"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_exists}">
<kw name="List Directory" library="OperatingSystem">
<var>@{local_folder_items}</var>
<arg>${local_folder_path}</arg>
<doc>Returns and logs items in a directory, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:19:17.775" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:19:17.776" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:19:17.776" level="INFO">@{local_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:19:17.775" endtime="20241223 16:19:17.776"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${local_list_length}</var>
<arg>${local_folder_items}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:19:17.778" level="INFO">Length is 1</msg>
<msg timestamp="20241223 16:19:17.778" level="INFO">${local_list_length} = 1</msg>
<status status="PASS" starttime="20241223 16:19:17.777" endtime="20241223 16:19:17.778"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${parent_path}</var>
<var>${copied_subfolder}</var>
<arg>${local_folder_path}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20241223 16:19:17.779" level="INFO">${parent_path} = c:\QA\robot_tmp</msg>
<msg timestamp="20241223 16:19:17.780" level="INFO">${copied_subfolder} = 1MB</msg>
<status status="PASS" starttime="20241223 16:19:17.778" endtime="20241223 16:19:17.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_folder_path_after_copy}</var>
<arg>${remote_folder_path}/${copied_subfolder}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:19:17.781" level="INFO">${remote_folder_path_after_copy} = /tmp/1MB</msg>
<status status="PASS" starttime="20241223 16:19:17.780" endtime="20241223 16:19:17.781"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${start_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:19:17.782" level="INFO">${start_time} = 2024-12-23 16:19:17.781786</msg>
<status status="PASS" starttime="20241223 16:19:17.781" endtime="20241223 16:19:17.782"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${local_folder_path}</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20241223 16:19:17.783" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:19:17.784" level="INFO">1 file:
1MB.txt</msg>
<msg timestamp="20241223 16:19:17.784" level="INFO">@{files} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:19:17.783" endtime="20241223 16:19:17.784"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${transferred _size}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:19:17.785" level="INFO">${transferred _size} = 0</msg>
<status status="PASS" starttime="20241223 16:19:17.785" endtime="20241223 16:19:17.785"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${file}">1MB.txt</var>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_file_path}</var>
<arg>${remote_folder_path_after_copy}/${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:19:17.787" level="INFO">${remote_file_path} = /tmp/1MB/1MB.txt</msg>
<status status="PASS" starttime="20241223 16:19:17.786" endtime="20241223 16:19:17.787"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${local_file_path}</var>
<arg>${local_folder_path}\\${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:19:17.788" level="INFO">${local_file_path} = c:\QA\robot_tmp\1MB\1MB.txt</msg>
<status status="PASS" starttime="20241223 16:19:17.787" endtime="20241223 16:19:17.788"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Local file: ${local_file_path}</arg>
<arg>-- ${file} is uploading to remote destination: ${remote_file_path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:17.788" endtime="20241223 16:19:17.790"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${size}</var>
<arg>os.path.getsize(r"""${local_file_path}""")</arg>
<arg>modules=os</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:19:17.791" level="INFO">${size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:19:17.790" endtime="20241223 16:19:17.791"/>
</kw>
<kw name="Put File" library="SSHLibrary">
<arg>${local_file_path}</arg>
<arg>${remote_file_path}</arg>
<doc>Uploads file(s) from the local machine to the remote machine.</doc>
<msg timestamp="20241223 16:19:18.960" level="INFO">'c:\QA\robot_tmp\1MB\1MB.txt' -&gt; '/tmp/1MB/1MB.txt'</msg>
<status status="PASS" starttime="20241223 16:19:17.792" endtime="20241223 16:19:18.960"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${transferred_size}</var>
<arg>${transferred_size}+${size}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:19:18.962" level="INFO">${transferred_size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:19:18.961" endtime="20241223 16:19:18.962"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>size ${size} \(total: ${transferred size}\) file: ${file} is uploaded.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:18.963" endtime="20241223 16:19:18.965"/>
</kw>
<status status="PASS" starttime="20241223 16:19:17.786" endtime="20241223 16:19:18.965"/>
</iter>
<status status="PASS" starttime="20241223 16:19:17.785" endtime="20241223 16:19:18.965"/>
</for>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_complete_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:19:18.966" endtime="20241223 16:19:18.999"/>
</kw>
<msg timestamp="20241223 16:19:19.000" level="INFO">${remote_folder_complete_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:19:18.966" endtime="20241223 16:19:19.000"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_complete_path_exists}">
<kw name="List Directory" library="SSHLibrary">
<var>@{remote_folder_items}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:19:19.153" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:19:19.154" level="INFO">@{remote_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:19:19.001" endtime="20241223 16:19:19.154"/>
</kw>
<status status="PASS" starttime="20241223 16:19:19.001" endtime="20241223 16:19:19.154"/>
</branch>
<status status="PASS" starttime="20241223 16:19:19.001" endtime="20241223 16:19:19.155"/>
</if>
<kw name="Get Current Date" library="DateTime">
<var>${stop_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:19:19.156" level="INFO">${stop_time} = 2024-12-23 16:19:19.155815</msg>
<status status="PASS" starttime="20241223 16:19:19.155" endtime="20241223 16:19:19.156"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${duration}</var>
<arg>(datetime.datetime.strptime('${stop_time}', '${timestamp_format}') - datetime.datetime.strptime('${start_time}', '${timestamp_format}')).total_seconds()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:19:19.157" level="INFO">${duration} = 1.374029</msg>
<status status="PASS" starttime="20241223 16:19:19.156" endtime="20241223 16:19:19.158"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${remote_list_length}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:19:19.159" level="INFO">Length is 8</msg>
<msg timestamp="20241223 16:19:19.159" level="INFO">${remote_list_length} = 8</msg>
<status status="PASS" starttime="20241223 16:19:19.158" endtime="20241223 16:19:19.159"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:19:19.314" level="INFO">7 items:
.err
1MB
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:19:19.314" level="INFO">@{items} = [ .err | 1MB | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | system...</msg>
<status status="PASS" starttime="20241223 16:19:19.159" endtime="20241223 16:19:19.315"/>
</kw>
<kw name="Remote Folder Remove">
<arg>${remote_folder_path_after_copy}</arg>
<kw name="Execute Command" library="SSHLibrary">
<var>${output}</var>
<arg>rm -rf ${remote_folder_path}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20241223 16:19:19.316" level="INFO">Executing command 'rm -rf /tmp/1MB'.</msg>
<msg timestamp="20241223 16:19:19.412" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20241223 16:19:19.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241223 16:19:19.316" endtime="20241223 16:19:19.413"/>
</kw>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:19:19.413" endtime="20241223 16:19:19.508"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Remote directory ${remote_folder_path} removed\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:19.509" endtime="20241223 16:19:19.510"/>
</kw>
<status status="PASS" starttime="20241223 16:19:19.315" endtime="20241223 16:19:19.510"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_not_exists}</var>
<arg>SSHLibrary.Directory Should Not Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:19:19.512" endtime="20241223 16:19:19.542"/>
</kw>
<msg timestamp="20241223 16:19:19.542" level="INFO">${remote_folder_path_not_exists} = True</msg>
<status status="PASS" starttime="20241223 16:19:19.511" endtime="20241223 16:19:19.542"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_not_exists}">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder deleted OK : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:19.543" endtime="20241223 16:19:19.544"/>
</kw>
<status status="PASS" starttime="20241223 16:19:19.543" endtime="20241223 16:19:19.545"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder NOT deleted : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:19:19.546" endtime="20241223 16:19:19.546"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:19:19.545" endtime="20241223 16:19:19.546"/>
</branch>
<status status="PASS" starttime="20241223 16:19:19.543" endtime="20241223 16:19:19.546"/>
</if>
<status status="PASS" starttime="20241223 16:19:17.774" endtime="20241223 16:19:19.547"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:19:19.547" endtime="20241223 16:19:19.547"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:19:19.548" endtime="20241223 16:19:19.548"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:19:19.547" endtime="20241223 16:19:19.548"/>
</branch>
<status status="PASS" starttime="20241223 16:19:17.774" endtime="20241223 16:19:19.549"/>
</if>
<status status="PASS" starttime="20241223 16:19:17.742" endtime="20241223 16:19:19.549"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:19:19.549" endtime="20241223 16:19:19.550"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:19:19.550" endtime="20241223 16:19:19.550"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:19:19.549" endtime="20241223 16:19:19.551"/>
</branch>
<status status="PASS" starttime="20241223 16:19:17.742" endtime="20241223 16:19:19.551"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${average_speed}</var>
<arg>round((${transferred_size} / 1024) / ${duration}, 2)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:19:19.552" level="INFO">${average_speed} = 745.21</msg>
<status status="PASS" starttime="20241223 16:19:19.551" endtime="20241223 16:19:19.552"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Number of copied items: ${local_list_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:19.553" endtime="20241223 16:19:19.553"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Total size: ${transferred_size} bytes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:19.554" endtime="20241223 16:19:19.554"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Time to copy: ${duration}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:19.555" endtime="20241223 16:19:19.556"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Average Speed: ${average_speed} KB/</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:19.556" endtime="20241223 16:19:19.557"/>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20241223 16:19:19.557" endtime="20241223 16:19:19.559"/>
</kw>
<status status="PASS" starttime="20241223 16:19:11.501" endtime="20241223 16:19:19.559"/>
</kw>
<kw name="Stop Clumsy">
<arg>${process}</arg>
<kw name="Terminate Process" library="Process">
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20241223 16:19:19.560" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20241223 16:19:49.636" level="INFO">Graceful termination failed.</msg>
<msg timestamp="20241223 16:19:49.636" level="INFO">Forcefully killing process.</msg>
<msg timestamp="20241223 16:19:49.736" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20241223 16:19:19.560" endtime="20241223 16:19:49.737"/>
</kw>
<status status="PASS" starttime="20241223 16:19:19.559" endtime="20241223 16:19:49.737"/>
</kw>
<status status="PASS" starttime="20241223 16:19:11.490" endtime="20241223 16:19:49.737"/>
</kw>
<kw name="Upload With Throttle By Clumsy">
<arg>host=10.78.185.37</arg>
<arg>username=fx3000</arg>
<arg>password=Systemuser!</arg>
<arg>upload_folder=c:\\QA\\robot_tmp\\1MB</arg>
<arg>throttle_chance=10</arg>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>${CLUMSY_PATH}clumsy.exe</arg>
<arg>--throttle</arg>
<arg>on</arg>
<arg>--throttle-inbound</arg>
<arg>on</arg>
<arg>--throttle-outbound</arg>
<arg>on</arg>
<arg>--throttle-chance</arg>
<arg>${throttle_chance}</arg>
<arg>alias=clumsy_03</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20241223 16:19:49.740" level="INFO">Starting process:
C:/QA/temp/clumsy_03/clumsy.exe --throttle on --throttle-inbound on --throttle-outbound on --throttle-chance 10</msg>
<msg timestamp="20241223 16:19:49.748" level="INFO">${process} = &lt;Popen: returncode: None args: ['C:/QA/temp/clumsy_03/clumsy.exe', '--thrott...&gt;</msg>
<status status="PASS" starttime="20241223 16:19:49.740" endtime="20241223 16:19:49.749"/>
</kw>
<kw name="Test SFTP Upload All Folder Files To Remote">
<arg>${host}</arg>
<arg>${alias}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>5</arg>
<arg>${upload_folder}</arg>
<arg>/tmp</arg>
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=${alias}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20241223 16:19:49.750" endtime="20241223 16:19:49.751"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${username}</arg>
<arg>${password}</arg>
<arg>delay=${delay}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20241223 16:19:49.752" level="INFO">Logging into '10.78.185.37:22' as 'fx3000'.</msg>
<msg timestamp="20241223 16:19:55.742" level="INFO">Read output: Last login: Mon Dec 23 16:19:13 2024 from 10.80.192.99
FX-3000-X Controller
Powered by Anvil Platform
Fidelix Tech Oy
fx3000@fx3000-10880847:~$</msg>
<status status="PASS" starttime="20241223 16:19:49.751" endtime="20241223 16:19:55.743"/>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<var>${connection_info}</var>
<doc>Returns information about the connection.</doc>
<msg timestamp="20241223 16:19:55.744" level="INFO">index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<msg timestamp="20241223 16:19:55.745" level="INFO">${connection_info} = index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<status status="PASS" starttime="20241223 16:19:55.743" endtime="20241223 16:19:55.745"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Connection info: ${connection_info}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:55.745" endtime="20241223 16:19:55.748"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:19:55.959" level="INFO">[chan 1] Opened sftp connection (server version 3)</msg>
<msg timestamp="20241223 16:19:56.217" level="INFO">6 items:
.err
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:19:56.217" level="INFO">@{items} = [ .err | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | systemd-priv...</msg>
<status status="PASS" starttime="20241223 16:19:55.748" endtime="20241223 16:19:56.217"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${local_folder_path_exists}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>${local_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${local_folder_path}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20241223 16:19:56.219" level="INFO" html="true">Directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20241223 16:19:56.219" endtime="20241223 16:19:56.220"/>
</kw>
<msg timestamp="20241223 16:19:56.220" level="INFO">${local_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:19:56.218" endtime="20241223 16:19:56.220"/>
</kw>
<if>
<branch type="IF" condition="${local_folder_path_exists}">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:19:56.222" endtime="20241223 16:19:56.269"/>
</kw>
<msg timestamp="20241223 16:19:56.270" level="INFO">${remote_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:19:56.221" endtime="20241223 16:19:56.270"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_exists}">
<kw name="List Directory" library="OperatingSystem">
<var>@{local_folder_items}</var>
<arg>${local_folder_path}</arg>
<doc>Returns and logs items in a directory, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:19:56.272" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:19:56.272" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:19:56.273" level="INFO">@{local_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:19:56.271" endtime="20241223 16:19:56.273"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${local_list_length}</var>
<arg>${local_folder_items}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:19:56.274" level="INFO">Length is 1</msg>
<msg timestamp="20241223 16:19:56.274" level="INFO">${local_list_length} = 1</msg>
<status status="PASS" starttime="20241223 16:19:56.273" endtime="20241223 16:19:56.274"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${parent_path}</var>
<var>${copied_subfolder}</var>
<arg>${local_folder_path}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20241223 16:19:56.275" level="INFO">${parent_path} = c:\QA\robot_tmp</msg>
<msg timestamp="20241223 16:19:56.275" level="INFO">${copied_subfolder} = 1MB</msg>
<status status="PASS" starttime="20241223 16:19:56.274" endtime="20241223 16:19:56.275"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_folder_path_after_copy}</var>
<arg>${remote_folder_path}/${copied_subfolder}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:19:56.276" level="INFO">${remote_folder_path_after_copy} = /tmp/1MB</msg>
<status status="PASS" starttime="20241223 16:19:56.276" endtime="20241223 16:19:56.276"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${start_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:19:56.278" level="INFO">${start_time} = 2024-12-23 16:19:56.277549</msg>
<status status="PASS" starttime="20241223 16:19:56.277" endtime="20241223 16:19:56.278"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${local_folder_path}</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20241223 16:19:56.279" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:19:56.280" level="INFO">1 file:
1MB.txt</msg>
<msg timestamp="20241223 16:19:56.280" level="INFO">@{files} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:19:56.279" endtime="20241223 16:19:56.281"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${transferred _size}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:19:56.282" level="INFO">${transferred _size} = 0</msg>
<status status="PASS" starttime="20241223 16:19:56.281" endtime="20241223 16:19:56.282"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${file}">1MB.txt</var>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_file_path}</var>
<arg>${remote_folder_path_after_copy}/${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:19:56.283" level="INFO">${remote_file_path} = /tmp/1MB/1MB.txt</msg>
<status status="PASS" starttime="20241223 16:19:56.283" endtime="20241223 16:19:56.284"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${local_file_path}</var>
<arg>${local_folder_path}\\${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:19:56.285" level="INFO">${local_file_path} = c:\QA\robot_tmp\1MB\1MB.txt</msg>
<status status="PASS" starttime="20241223 16:19:56.284" endtime="20241223 16:19:56.285"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Local file: ${local_file_path}</arg>
<arg>-- ${file} is uploading to remote destination: ${remote_file_path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:56.285" endtime="20241223 16:19:56.286"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${size}</var>
<arg>os.path.getsize(r"""${local_file_path}""")</arg>
<arg>modules=os</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:19:56.288" level="INFO">${size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:19:56.287" endtime="20241223 16:19:56.288"/>
</kw>
<kw name="Put File" library="SSHLibrary">
<arg>${local_file_path}</arg>
<arg>${remote_file_path}</arg>
<doc>Uploads file(s) from the local machine to the remote machine.</doc>
<msg timestamp="20241223 16:19:59.515" level="INFO">'c:\QA\robot_tmp\1MB\1MB.txt' -&gt; '/tmp/1MB/1MB.txt'</msg>
<status status="PASS" starttime="20241223 16:19:56.288" endtime="20241223 16:19:59.516"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${transferred_size}</var>
<arg>${transferred_size}+${size}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:19:59.517" level="INFO">${transferred_size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:19:59.516" endtime="20241223 16:19:59.517"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>size ${size} \(total: ${transferred size}\) file: ${file} is uploaded.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:19:59.518" endtime="20241223 16:19:59.519"/>
</kw>
<status status="PASS" starttime="20241223 16:19:56.282" endtime="20241223 16:19:59.519"/>
</iter>
<status status="PASS" starttime="20241223 16:19:56.282" endtime="20241223 16:19:59.519"/>
</for>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_complete_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:19:59.520" endtime="20241223 16:19:59.554"/>
</kw>
<msg timestamp="20241223 16:19:59.554" level="INFO">${remote_folder_complete_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:19:59.520" endtime="20241223 16:19:59.554"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_complete_path_exists}">
<kw name="List Directory" library="SSHLibrary">
<var>@{remote_folder_items}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:19:59.760" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:19:59.761" level="INFO">@{remote_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:19:59.555" endtime="20241223 16:19:59.761"/>
</kw>
<status status="PASS" starttime="20241223 16:19:59.555" endtime="20241223 16:19:59.762"/>
</branch>
<status status="PASS" starttime="20241223 16:19:59.555" endtime="20241223 16:19:59.763"/>
</if>
<kw name="Get Current Date" library="DateTime">
<var>${stop_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:19:59.765" level="INFO">${stop_time} = 2024-12-23 16:19:59.764536</msg>
<status status="PASS" starttime="20241223 16:19:59.763" endtime="20241223 16:19:59.765"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${duration}</var>
<arg>(datetime.datetime.strptime('${stop_time}', '${timestamp_format}') - datetime.datetime.strptime('${start_time}', '${timestamp_format}')).total_seconds()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:19:59.767" level="INFO">${duration} = 3.486987</msg>
<status status="PASS" starttime="20241223 16:19:59.766" endtime="20241223 16:19:59.767"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${remote_list_length}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:19:59.768" level="INFO">Length is 8</msg>
<msg timestamp="20241223 16:19:59.769" level="INFO">${remote_list_length} = 8</msg>
<status status="PASS" starttime="20241223 16:19:59.768" endtime="20241223 16:19:59.769"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:20:00.103" level="INFO">7 items:
.err
1MB
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:20:00.104" level="INFO">@{items} = [ .err | 1MB | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | system...</msg>
<status status="PASS" starttime="20241223 16:19:59.769" endtime="20241223 16:20:00.104"/>
</kw>
<kw name="Remote Folder Remove">
<arg>${remote_folder_path_after_copy}</arg>
<kw name="Execute Command" library="SSHLibrary">
<var>${output}</var>
<arg>rm -rf ${remote_folder_path}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20241223 16:20:00.106" level="INFO">Executing command 'rm -rf /tmp/1MB'.</msg>
<msg timestamp="20241223 16:20:00.269" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20241223 16:20:00.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241223 16:20:00.105" endtime="20241223 16:20:00.270"/>
</kw>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:20:00.270" endtime="20241223 16:20:00.471"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Remote directory ${remote_folder_path} removed\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:00.471" endtime="20241223 16:20:00.473"/>
</kw>
<status status="PASS" starttime="20241223 16:20:00.104" endtime="20241223 16:20:00.473"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_not_exists}</var>
<arg>SSHLibrary.Directory Should Not Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:20:00.474" endtime="20241223 16:20:00.543"/>
</kw>
<msg timestamp="20241223 16:20:00.543" level="INFO">${remote_folder_path_not_exists} = True</msg>
<status status="PASS" starttime="20241223 16:20:00.474" endtime="20241223 16:20:00.543"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_not_exists}">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder deleted OK : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:00.544" endtime="20241223 16:20:00.545"/>
</kw>
<status status="PASS" starttime="20241223 16:20:00.544" endtime="20241223 16:20:00.546"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder NOT deleted : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:20:00.547" endtime="20241223 16:20:00.547"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:20:00.546" endtime="20241223 16:20:00.547"/>
</branch>
<status status="PASS" starttime="20241223 16:20:00.544" endtime="20241223 16:20:00.547"/>
</if>
<status status="PASS" starttime="20241223 16:19:56.270" endtime="20241223 16:20:00.548"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:20:00.548" endtime="20241223 16:20:00.549"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:20:00.549" endtime="20241223 16:20:00.549"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:20:00.548" endtime="20241223 16:20:00.549"/>
</branch>
<status status="PASS" starttime="20241223 16:19:56.270" endtime="20241223 16:20:00.550"/>
</if>
<status status="PASS" starttime="20241223 16:19:56.221" endtime="20241223 16:20:00.550"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:20:00.550" endtime="20241223 16:20:00.551"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:20:00.551" endtime="20241223 16:20:00.552"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:20:00.550" endtime="20241223 16:20:00.552"/>
</branch>
<status status="PASS" starttime="20241223 16:19:56.220" endtime="20241223 16:20:00.552"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${average_speed}</var>
<arg>round((${transferred_size} / 1024) / ${duration}, 2)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:20:00.553" level="INFO">${average_speed} = 293.65</msg>
<status status="PASS" starttime="20241223 16:20:00.552" endtime="20241223 16:20:00.553"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Number of copied items: ${local_list_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:00.554" endtime="20241223 16:20:00.555"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Total size: ${transferred_size} bytes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:00.555" endtime="20241223 16:20:00.556"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Time to copy: ${duration}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:00.556" endtime="20241223 16:20:00.557"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Average Speed: ${average_speed} KB/</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:00.557" endtime="20241223 16:20:00.558"/>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20241223 16:20:00.559" endtime="20241223 16:20:00.560"/>
</kw>
<status status="PASS" starttime="20241223 16:19:49.749" endtime="20241223 16:20:00.560"/>
</kw>
<kw name="Stop Clumsy">
<arg>${process}</arg>
<kw name="Terminate Process" library="Process">
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20241223 16:20:00.562" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20241223 16:20:30.631" level="INFO">Graceful termination failed.</msg>
<msg timestamp="20241223 16:20:30.632" level="INFO">Forcefully killing process.</msg>
<msg timestamp="20241223 16:20:30.732" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20241223 16:20:00.561" endtime="20241223 16:20:30.732"/>
</kw>
<status status="PASS" starttime="20241223 16:20:00.561" endtime="20241223 16:20:30.733"/>
</kw>
<status status="PASS" starttime="20241223 16:19:49.738" endtime="20241223 16:20:30.733"/>
</kw>
<kw name="Upload With OOD By Clumsy">
<arg>host=10.78.185.37</arg>
<arg>username=fx3000</arg>
<arg>password=Systemuser!</arg>
<arg>upload_folder=c:\\QA\\robot_tmp\\1MB</arg>
<arg>ood_chance=10</arg>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>${CLUMSY_PATH}clumsy.exe</arg>
<arg>--ood</arg>
<arg>on</arg>
<arg>--ood-inbound</arg>
<arg>on</arg>
<arg>--ood-outbound</arg>
<arg>on</arg>
<arg>--ood-chance</arg>
<arg>${ood_chance}</arg>
<arg>alias=clumsy_03</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20241223 16:20:30.736" level="INFO">Starting process:
C:/QA/temp/clumsy_03/clumsy.exe --ood on --ood-inbound on --ood-outbound on --ood-chance 10</msg>
<msg timestamp="20241223 16:20:30.751" level="INFO">${process} = &lt;Popen: returncode: None args: ['C:/QA/temp/clumsy_03/clumsy.exe', '--ood', ...&gt;</msg>
<status status="PASS" starttime="20241223 16:20:30.735" endtime="20241223 16:20:30.752"/>
</kw>
<kw name="Test SFTP Upload All Folder Files To Remote">
<arg>${host}</arg>
<arg>${alias}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>5</arg>
<arg>${upload_folder}</arg>
<arg>/tmp</arg>
<kw name="Open Connection" library="SSHLibrary">
<arg>${host}</arg>
<arg>alias=${alias}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20241223 16:20:30.753" endtime="20241223 16:20:30.754"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${username}</arg>
<arg>${password}</arg>
<arg>delay=${delay}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20241223 16:20:30.755" level="INFO">Logging into '10.78.185.37:22' as 'fx3000'.</msg>
<msg timestamp="20241223 16:20:36.667" level="INFO">Read output: Last login: Mon Dec 23 16:19:52 2024 from 10.80.192.99
FX-3000-X Controller
Powered by Anvil Platform
Fidelix Tech Oy
fx3000@fx3000-10880847:~$</msg>
<status status="PASS" starttime="20241223 16:20:30.754" endtime="20241223 16:20:36.667"/>
</kw>
<kw name="Get Connection" library="SSHLibrary">
<var>${connection_info}</var>
<doc>Returns information about the connection.</doc>
<msg timestamp="20241223 16:20:36.668" level="INFO">index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<msg timestamp="20241223 16:20:36.669" level="INFO">${connection_info} = index=1
host=10.78.185.37
alias=fx3000x
port=22
timeout=3 seconds
newline=

prompt=None
term_type=vt100
width=80
height=24
path_separator=/
encoding=UTF-8
escape_ansi=False
encoding_errors=strict</msg>
<status status="PASS" starttime="20241223 16:20:36.668" endtime="20241223 16:20:36.669"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Connection info: ${connection_info}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:36.669" endtime="20241223 16:20:36.672"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:20:36.765" level="INFO">[chan 1] Opened sftp connection (server version 3)</msg>
<msg timestamp="20241223 16:20:37.198" level="INFO">6 items:
.err
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:20:37.198" level="INFO">@{items} = [ .err | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | systemd-priv...</msg>
<status status="PASS" starttime="20241223 16:20:36.672" endtime="20241223 16:20:37.199"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${local_folder_path_exists}</var>
<arg>OperatingSystem.Directory Should Exist</arg>
<arg>${local_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${local_folder_path}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20241223 16:20:37.201" level="INFO" html="true">Directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20241223 16:20:37.200" endtime="20241223 16:20:37.201"/>
</kw>
<msg timestamp="20241223 16:20:37.201" level="INFO">${local_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:20:37.199" endtime="20241223 16:20:37.201"/>
</kw>
<if>
<branch type="IF" condition="${local_folder_path_exists}">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:20:37.203" endtime="20241223 16:20:37.234"/>
</kw>
<msg timestamp="20241223 16:20:37.235" level="INFO">${remote_folder_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:20:37.202" endtime="20241223 16:20:37.235"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_exists}">
<kw name="List Directory" library="OperatingSystem">
<var>@{local_folder_items}</var>
<arg>${local_folder_path}</arg>
<doc>Returns and logs items in a directory, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:20:37.237" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:20:37.237" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:20:37.237" level="INFO">@{local_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:20:37.236" endtime="20241223 16:20:37.238"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${local_list_length}</var>
<arg>${local_folder_items}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:20:37.239" level="INFO">Length is 1</msg>
<msg timestamp="20241223 16:20:37.239" level="INFO">${local_list_length} = 1</msg>
<status status="PASS" starttime="20241223 16:20:37.238" endtime="20241223 16:20:37.239"/>
</kw>
<kw name="Split Path" library="OperatingSystem">
<var>${parent_path}</var>
<var>${copied_subfolder}</var>
<arg>${local_folder_path}</arg>
<doc>Splits the given path from the last path separator (``/`` or ``\``).</doc>
<msg timestamp="20241223 16:20:37.240" level="INFO">${parent_path} = c:\QA\robot_tmp</msg>
<msg timestamp="20241223 16:20:37.240" level="INFO">${copied_subfolder} = 1MB</msg>
<status status="PASS" starttime="20241223 16:20:37.239" endtime="20241223 16:20:37.240"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_folder_path_after_copy}</var>
<arg>${remote_folder_path}/${copied_subfolder}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:20:37.241" level="INFO">${remote_folder_path_after_copy} = /tmp/1MB</msg>
<status status="PASS" starttime="20241223 16:20:37.241" endtime="20241223 16:20:37.241"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${start_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:20:37.242" level="INFO">${start_time} = 2024-12-23 16:20:37.242199</msg>
<status status="PASS" starttime="20241223 16:20:37.242" endtime="20241223 16:20:37.243"/>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<var>@{files}</var>
<arg>${local_folder_path}</arg>
<doc>Wrapper for `List Directory` that returns only files.</doc>
<msg timestamp="20241223 16:20:37.243" level="INFO" html="true">Listing contents of directory '&lt;a href="file://c:\QA\robot_tmp\1MB"&gt;c:\QA\robot_tmp\1MB&lt;/a&gt;'.</msg>
<msg timestamp="20241223 16:20:37.244" level="INFO">1 file:
1MB.txt</msg>
<msg timestamp="20241223 16:20:37.244" level="INFO">@{files} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:20:37.243" endtime="20241223 16:20:37.244"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${transferred _size}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:20:37.246" level="INFO">${transferred _size} = 0</msg>
<status status="PASS" starttime="20241223 16:20:37.245" endtime="20241223 16:20:37.246"/>
</kw>
<for flavor="IN">
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${file}">1MB.txt</var>
<kw name="Set Variable" library="BuiltIn">
<var>${remote_file_path}</var>
<arg>${remote_folder_path_after_copy}/${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:20:37.249" level="INFO">${remote_file_path} = /tmp/1MB/1MB.txt</msg>
<status status="PASS" starttime="20241223 16:20:37.248" endtime="20241223 16:20:37.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${local_file_path}</var>
<arg>${local_folder_path}\\${file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241223 16:20:37.251" level="INFO">${local_file_path} = c:\QA\robot_tmp\1MB\1MB.txt</msg>
<status status="PASS" starttime="20241223 16:20:37.250" endtime="20241223 16:20:37.251"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Local file: ${local_file_path}</arg>
<arg>-- ${file} is uploading to remote destination: ${remote_file_path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:37.252" endtime="20241223 16:20:37.253"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${size}</var>
<arg>os.path.getsize(r"""${local_file_path}""")</arg>
<arg>modules=os</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:20:37.254" level="INFO">${size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:20:37.253" endtime="20241223 16:20:37.254"/>
</kw>
<kw name="Put File" library="SSHLibrary">
<arg>${local_file_path}</arg>
<arg>${remote_file_path}</arg>
<doc>Uploads file(s) from the local machine to the remote machine.</doc>
<msg timestamp="20241223 16:20:39.365" level="INFO">'c:\QA\robot_tmp\1MB\1MB.txt' -&gt; '/tmp/1MB/1MB.txt'</msg>
<status status="PASS" starttime="20241223 16:20:37.255" endtime="20241223 16:20:39.366"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${transferred_size}</var>
<arg>${transferred_size}+${size}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:20:39.367" level="INFO">${transferred_size} = 1048520</msg>
<status status="PASS" starttime="20241223 16:20:39.366" endtime="20241223 16:20:39.367"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>size ${size} \(total: ${transferred size}\) file: ${file} is uploaded.</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:39.368" endtime="20241223 16:20:39.369"/>
</kw>
<status status="PASS" starttime="20241223 16:20:37.247" endtime="20241223 16:20:39.369"/>
</iter>
<status status="PASS" starttime="20241223 16:20:37.247" endtime="20241223 16:20:39.369"/>
</for>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_complete_path_exists}</var>
<arg>SSHLibrary.Directory Should Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` does not point to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:20:39.370" endtime="20241223 16:20:39.406"/>
</kw>
<msg timestamp="20241223 16:20:39.407" level="INFO">${remote_folder_complete_path_exists} = True</msg>
<status status="PASS" starttime="20241223 16:20:39.370" endtime="20241223 16:20:39.407"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_complete_path_exists}">
<kw name="List Directory" library="SSHLibrary">
<var>@{remote_folder_items}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:20:40.023" level="INFO">1 item:
1MB.txt</msg>
<msg timestamp="20241223 16:20:40.024" level="INFO">@{remote_folder_items} = [ 1MB.txt ]</msg>
<status status="PASS" starttime="20241223 16:20:39.408" endtime="20241223 16:20:40.024"/>
</kw>
<status status="PASS" starttime="20241223 16:20:39.407" endtime="20241223 16:20:40.024"/>
</branch>
<status status="PASS" starttime="20241223 16:20:39.407" endtime="20241223 16:20:40.024"/>
</if>
<kw name="Get Current Date" library="DateTime">
<var>${stop_time}</var>
<arg>result_format=${timestamp_format}</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20241223 16:20:40.026" level="INFO">${stop_time} = 2024-12-23 16:20:40.025013</msg>
<status status="PASS" starttime="20241223 16:20:40.025" endtime="20241223 16:20:40.026"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${duration}</var>
<arg>(datetime.datetime.strptime('${stop_time}', '${timestamp_format}') - datetime.datetime.strptime('${start_time}', '${timestamp_format}')).total_seconds()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:20:40.027" level="INFO">${duration} = 2.782814</msg>
<status status="PASS" starttime="20241223 16:20:40.026" endtime="20241223 16:20:40.027"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${remote_list_length}</var>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241223 16:20:40.028" level="INFO">Length is 8</msg>
<msg timestamp="20241223 16:20:40.029" level="INFO">${remote_list_length} = 8</msg>
<status status="PASS" starttime="20241223 16:20:40.028" endtime="20241223 16:20:40.029"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>@{items}</var>
<arg>/tmp</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<msg timestamp="20241223 16:20:40.407" level="INFO">7 items:
.err
1MB
debug.1.txt
debug.txt
systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X
systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-resolved.service-7tUoVt</msg>
<msg timestamp="20241223 16:20:40.408" level="INFO">@{items} = [ .err | 1MB | debug.1.txt | debug.txt | systemd-private-6c05df8252d64f6ab2deed1be309832c-nginx.service-ZYts7Z | systemd-private-6c05df8252d64f6ab2deed1be309832c-systemd-logind.service-ltGS7X | system...</msg>
<status status="PASS" starttime="20241223 16:20:40.029" endtime="20241223 16:20:40.408"/>
</kw>
<kw name="Remote Folder Remove">
<arg>${remote_folder_path_after_copy}</arg>
<kw name="Execute Command" library="SSHLibrary">
<var>${output}</var>
<arg>rm -rf ${remote_folder_path}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<msg timestamp="20241223 16:20:40.410" level="INFO">Executing command 'rm -rf /tmp/1MB'.</msg>
<msg timestamp="20241223 16:20:41.134" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20241223 16:20:41.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20241223 16:20:40.409" endtime="20241223 16:20:41.134"/>
</kw>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:20:41.135" endtime="20241223 16:20:41.406"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Remote directory ${remote_folder_path} removed\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:41.406" endtime="20241223 16:20:41.408"/>
</kw>
<status status="PASS" starttime="20241223 16:20:40.409" endtime="20241223 16:20:41.408"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${remote_folder_path_not_exists}</var>
<arg>SSHLibrary.Directory Should Not Exist</arg>
<arg>${remote_folder_path_after_copy}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Not Exist" library="SSHLibrary">
<arg>${remote_folder_path_after_copy}</arg>
<doc>Fails if the given ``path`` points to an existing directory.</doc>
<status status="PASS" starttime="20241223 16:20:41.409" endtime="20241223 16:20:41.440"/>
</kw>
<msg timestamp="20241223 16:20:41.440" level="INFO">${remote_folder_path_not_exists} = True</msg>
<status status="PASS" starttime="20241223 16:20:41.408" endtime="20241223 16:20:41.441"/>
</kw>
<if>
<branch type="IF" condition="${remote_folder_path_not_exists}">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder deleted OK : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:41.442" endtime="20241223 16:20:41.443"/>
</kw>
<status status="PASS" starttime="20241223 16:20:41.441" endtime="20241223 16:20:41.443"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder NOT deleted : ${remote_folder_path_after_copy}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:20:41.444" endtime="20241223 16:20:41.444"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:20:41.443" endtime="20241223 16:20:41.444"/>
</branch>
<status status="PASS" starttime="20241223 16:20:41.441" endtime="20241223 16:20:41.445"/>
</if>
<status status="PASS" starttime="20241223 16:20:37.235" endtime="20241223 16:20:41.445"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:20:41.446" endtime="20241223 16:20:41.446"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Remote folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:20:41.446" endtime="20241223 16:20:41.446"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:20:41.445" endtime="20241223 16:20:41.447"/>
</branch>
<status status="PASS" starttime="20241223 16:20:37.235" endtime="20241223 16:20:41.447"/>
</if>
<status status="PASS" starttime="20241223 16:20:37.202" endtime="20241223 16:20:41.447"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241223 16:20:41.448" endtime="20241223 16:20:41.448"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Local folder ${remote_folder_path_after_copy} does not exist</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241223 16:20:41.449" endtime="20241223 16:20:41.449"/>
</kw>
<status status="NOT RUN" starttime="20241223 16:20:41.447" endtime="20241223 16:20:41.449"/>
</branch>
<status status="PASS" starttime="20241223 16:20:37.202" endtime="20241223 16:20:41.449"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${average_speed}</var>
<arg>round((${transferred_size} / 1024) / ${duration}, 2)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241223 16:20:41.450" level="INFO">${average_speed} = 367.95</msg>
<status status="PASS" starttime="20241223 16:20:41.450" endtime="20241223 16:20:41.451"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Number of copied items: ${local_list_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:41.451" endtime="20241223 16:20:41.452"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Total size: ${transferred_size} bytes</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:41.452" endtime="20241223 16:20:41.453"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Time to copy: ${duration}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:41.453" endtime="20241223 16:20:41.454"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Average Speed: ${average_speed} KB/</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241223 16:20:41.455" endtime="20241223 16:20:41.456"/>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20241223 16:20:41.456" endtime="20241223 16:20:41.457"/>
</kw>
<status status="PASS" starttime="20241223 16:20:30.752" endtime="20241223 16:20:41.458"/>
</kw>
<kw name="Stop Clumsy">
<arg>${process}</arg>
<kw name="Terminate Process" library="Process">
<arg>${process}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20241223 16:20:41.459" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20241223 16:21:11.517" level="INFO">Graceful termination failed.</msg>
<msg timestamp="20241223 16:21:11.518" level="INFO">Forcefully killing process.</msg>
<msg timestamp="20241223 16:21:11.618" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20241223 16:20:41.459" endtime="20241223 16:21:11.619"/>
</kw>
<status status="PASS" starttime="20241223 16:20:41.458" endtime="20241223 16:21:11.619"/>
</kw>
<status status="PASS" starttime="20241223 16:20:30.734" endtime="20241223 16:21:11.619"/>
</kw>
<doc>Using Clumsy to limit bandwidth for outbound connections to a host destination IP.
Command line options for Clumsy.exe:
--filter = "filter string". Example: --filter "tcp and (tcp.DstPort == 443 or tcp.SrcPort == 443)"
--drop [on/off] = Whether or not drop is enabled. Default is off. Example: --drop on
--duplicate [on/off] = Whether or not duplicate is enabled. Default is off. Example: --duplicate on
--lag [on/off] = Whether or not lag is enabled. Default is off. Example: --lag on
--lag-time [0-3000] = Milliseconds to delay the request for LAG type
--ood [on/off] = Whether or not "out of order" is enabled. Default is off. Example: --ood on
--tamper [on/off] = Whether or not tamper is enabled. Default is off. Example: --tamper on
--throttle [on/off] = Whether or not throttle is enabled. Default is off. Example: --throttle on
--bandwidth [on/off] = Whether or not bandwidth limit is enabled. Default is off. Example: --bandwidth on
--bandwidth-bandwidth [0-99999] = Bandwidth in Kilobytes per second. Example: --bandwidth-bandwidth 10
--TYPE-inbound [on/off] = Given TYPE is one of drop, duplicate, lag, ood, tamper, or throttle, this sets the inbound to on. Example: --drop-inbound on
--TYPE-outbound [on/off] = Given TYPE is one of drop, duplicate, lag, ood, tamper, or throttle, this sets the outbound to on. Example: --drop-outbound on
--TYPE-chance [0.0-100.0] = Given TYPE is one of drop, duplicate, ood, tamper, or throttle, this sets the chance of the operation. Example: --drop-chance 50.0
Example:
clumsy.exe --filter "tcp and (tcp.DstPort == 443 or tcp.SrcPort == 443)" --drop on --drop-inbound on --drop-outbound on --drop-chance 100.0</doc>
<status status="PASS" starttime="20241223 16:16:07.215" endtime="20241223 16:21:11.621"/>
</test>
<status status="PASS" starttime="20241223 16:16:04.747" endtime="20241223 16:21:11.634"/>
</suite>
<status status="PASS" starttime="20241223 16:16:02.764" endtime="20241223 16:21:11.640"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Robots">Robots</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Sftp Stress Tests">Robots.Sftp Stress Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
